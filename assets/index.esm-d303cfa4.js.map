{"version":3,"file":"index.esm-d303cfa4.js","sources":["../../node_modules/@firebase/storage/dist/index.esm.js"],"sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __spreadArray, __awaiter, __generator, __assign } from 'tslib';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\r\nvar FirebaseStorageError = /** @class */ (function (_super) {\r\n    __extends(FirebaseStorageError, _super);\r\n    /**\r\n     * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     */\r\n    function FirebaseStorageError(code, message) {\r\n        var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\r\n        /**\r\n         * Stores custom error data unque to FirebaseStorageError.\r\n         */\r\n        _this.customData = { serverResponse: null };\r\n        // Without this, `instanceof FirebaseStorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n     */\r\n    FirebaseStorageError.prototype._codeEquals = function (code) {\r\n        return prependCode(code) === this.code;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        /**\r\n         * Error message including serverResponse if available.\r\n         */\r\n        get: function () {\r\n            if (this.customData.serverResponse) {\r\n                return this.message + \"\\n\" + this.customData.serverResponse;\r\n            }\r\n            else {\r\n                return this.message;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        /**\r\n         * Optional response message that was added by the server.\r\n         */\r\n        get: function () {\r\n            return this.customData.serverResponse;\r\n        },\r\n        set: function (serverResponse) {\r\n            this.customData.serverResponse = serverResponse;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}(FirebaseError));\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(\"unknown\" /* UNKNOWN */, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(\"object-not-found\" /* OBJECT_NOT_FOUND */, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(\"quota-exceeded\" /* QUOTA_EXCEEDED */, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(\"unauthenticated\" /* UNAUTHENTICATED */, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(\"unauthorized\" /* UNAUTHORIZED */, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(\"retry-limit-exceeded\" /* RETRY_LIMIT_EXCEEDED */, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(\"canceled\" /* CANCELED */, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(\"invalid-url\" /* INVALID_URL */, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(\"invalid-default-bucket\" /* INVALID_DEFAULT_BUCKET */, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(\"no-default-bucket\" /* NO_DEFAULT_BUCKET */, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(\"cannot-slice-blob\" /* CANNOT_SLICE_BLOB */, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(\"server-file-wrong-size\" /* SERVER_FILE_WRONG_SIZE */, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(\"no-download-url\" /* NO_DOWNLOAD_URL */, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(message) {\r\n    return new FirebaseStorageError(\"invalid-argument\" /* INVALID_ARGUMENT */, message);\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(\"app-deleted\" /* APP_DELETED */, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(\"invalid-root-operation\" /* INVALID_ROOT_OPERATION */, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(\"invalid-format\" /* INVALID_FORMAT */, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(\"internal-error\" /* INTERNAL_ERROR */, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\r\nvar StringFormat = {\r\n    /**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */\r\n    RAW: 'raw',\r\n    /**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64: 'base64',\r\n    /**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64URL: 'base64url',\r\n    /**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */\r\n    DATA_URL: 'data_url'\r\n};\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event that is triggered on a task.\r\n */\r\nvar TaskEvent = {\r\n    /**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\n/**\r\n * Represents the current state of a running upload.\r\n */\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case \"running\" /* RUNNING */:\r\n        case \"pausing\" /* PAUSING */:\r\n        case \"canceling\" /* CANCELING */:\r\n            return TaskState.RUNNING;\r\n        case \"paused\" /* PAUSED */:\r\n            return TaskState.PAUSED;\r\n        case \"success\" /* SUCCESS */:\r\n            return TaskState.SUCCESS;\r\n        case \"canceled\" /* CANCELED */:\r\n            return TaskState.CANCELED;\r\n        case \"error\" /* ERROR */:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\r\n    }\r\n    if (value > maxValue) {\r\n        throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.serverResponse = xhr.getResponseText();\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers, firebaseVersion) {\r\n    headers['X-Firebase-Storage-Version'] =\r\n        'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, pool, firebaseVersion) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers, firebaseVersion);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new FirebaseStorageError(\"unsupported-environment\" /* UNSUPPORTED_ENVIRONMENT */, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return service._makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = service._makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(service, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(service, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(service, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error;\r\n            this.complete = complete;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    function UploadTask(ref, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        /**\r\n         * Number of bytes transferred so far.\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = \"running\" /* RUNNING */;\r\n        this._errorHandler = function (error) {\r\n            _this._request = undefined;\r\n            _this._chunkMultiplier = 1;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                _this._needToFetchStatus = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = function (error) {\r\n            _this._request = undefined;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._resolve = resolve;\r\n            _this._reject = reject;\r\n            _this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, function () { });\r\n    }\r\n    UploadTask.prototype._makeProgressCallback = function () {\r\n        var _this = this;\r\n        var sizeBefore = this._transferred;\r\n        return function (loaded) { return _this._updateProgress(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype._shouldDoResumable = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype._start = function () {\r\n        if (this._state !== \"running\" /* RUNNING */) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    };\r\n    UploadTask.prototype._resolveToken = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this._ref.storage._getAuthToken().then(function (authToken) {\r\n            switch (_this._state) {\r\n                case \"running\" /* RUNNING */:\r\n                    callback(authToken);\r\n                    break;\r\n                case \"canceling\" /* CANCELING */:\r\n                    _this._transition(\"canceled\" /* CANCELED */);\r\n                    break;\r\n                case \"pausing\" /* PAUSING */:\r\n                    _this._transition(\"paused\" /* PAUSED */);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype._createResumable = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var createRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\r\n            _this._request = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this._request = undefined;\r\n                _this._uploadUrl = url;\r\n                _this._needToFetchStatus = false;\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._fetchStatus = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\r\n            var statusRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\r\n            _this._request = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this._request = undefined;\r\n                _this._updateProgress(status.current);\r\n                _this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    _this._needToFetchMetadata = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._continueUpload = function () {\r\n        var _this = this;\r\n        var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        var status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                _this._error = e;\r\n                _this._transition(\"error\" /* ERROR */);\r\n                return;\r\n            }\r\n            var uploadRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\r\n            _this._request = uploadRequest;\r\n            uploadRequest.getPromise().then(function (newStatus) {\r\n                _this._increaseMultiplier();\r\n                _this._request = undefined;\r\n                _this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this._metadata = newStatus.metadata;\r\n                    _this._transition(\"success\" /* SUCCESS */);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._increaseMultiplier = function () {\r\n        var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype._fetchMetadata = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = getMetadata(_this._ref.storage, _this._ref._location, _this._mappings);\r\n            var metadataRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\r\n            _this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._transition(\"success\" /* SUCCESS */);\r\n            }, _this._metadataErrorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._oneShotUpload = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var multipartRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\r\n            _this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._updateProgress(_this._blob.size());\r\n                _this._transition(\"success\" /* SUCCESS */);\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._updateProgress = function (transferred) {\r\n        var old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    };\r\n    UploadTask.prototype._transition = function (state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case \"canceling\" /* CANCELING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"pausing\" /* PAUSING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this._state === \"paused\" /* PAUSED */;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case \"paused\" /* PAUSED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"canceled\" /* CANCELED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"error\" /* ERROR */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"success\" /* SUCCESS */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this._state) {\r\n            case \"pausing\" /* PAUSING */:\r\n                this._transition(\"paused\" /* PAUSED */);\r\n                break;\r\n            case \"canceling\" /* CANCELING */:\r\n                this._transition(\"canceled\" /* CANCELED */);\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                this._start();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        /**\r\n         * A snapshot of the current task state.\r\n         */\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this._state);\r\n            return {\r\n                bytesTransferred: this._transferred,\r\n                totalBytes: this._blob.size(),\r\n                state: externalState,\r\n                metadata: this._metadata,\r\n                task: this,\r\n                ref: this._ref\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `FirebaseStorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var observer = new Observer(nextOrObserver, error, completed);\r\n        this._addObserver(observer);\r\n        return function () {\r\n            _this._removeObserver(observer);\r\n        };\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype._addObserver = function (observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype._removeObserver = function (observer) {\r\n        var i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObservers = function () {\r\n        var _this = this;\r\n        this._finishPromise();\r\n        var observers = this._observers.slice();\r\n        observers.forEach(function (observer) {\r\n            _this._notifyObserver(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype._finishPromise = function () {\r\n        if (this._resolve !== undefined) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObserver = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        var valid = this._state === \"paused\" /* PAUSED */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"running\" /* RUNNING */);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        var valid = this._state === \"running\" /* RUNNING */;\r\n        if (valid) {\r\n            this._transition(\"pausing\" /* PAUSING */);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        var valid = this._state === \"running\" /* RUNNING */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"canceling\" /* CANCELING */);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    };\r\n    Reference.prototype._newRef = function (service, location) {\r\n        return new Reference(service, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * A reference to the root of this object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this._location.bucket, '');\r\n            return this._newRef(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        /**\r\n         * The name of the bucket containing this reference's object.\r\n         */\r\n        get: function () {\r\n            return this._location.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        /**\r\n         * The full path of this object.\r\n         */\r\n        get: function () {\r\n            return this._location.path;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        /**\r\n         * The short name of this object, which is the last component of the full path.\r\n         * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n         */\r\n        get: function () {\r\n            return lastComponent(this._location.path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        /**\r\n         * The `StorageService` instance this `StorageReference` is associated with.\r\n         */\r\n        get: function () {\r\n            return this._service;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n         * this reference is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this._location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this._location.bucket, newPath);\r\n            return new Reference(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\r\n    Reference.prototype._throwIfRoot = function (name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    var accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(function () { return accumulator; });\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nfunction listAllHelper(ref, accumulator, pageToken) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var opt, nextPage;\r\n        var _a, _b;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    opt = {\r\n                        // maxResults is 1000 by default.\r\n                        pageToken: pageToken\r\n                    };\r\n                    return [4 /*yield*/, list$1(ref, opt)];\r\n                case 1:\r\n                    nextPage = _c.sent();\r\n                    (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                    (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                    if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, listAllHelper(ref, accumulator, nextPage.nextPageToken)];\r\n                case 2:\r\n                    _c.sent();\r\n                    _c.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, op, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (options != null) {\r\n                        if (typeof options.maxResults === 'number') {\r\n                            validateNumber('options.maxResults', \r\n                            /* minValue= */ 1, \r\n                            /* maxValue= */ 1000, options.maxResults);\r\n                        }\r\n                    }\r\n                    return [4 /*yield*/, ref.storage._getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    op = options || {};\r\n                    requestInfo = list(ref.storage, ref._location, \r\n                    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n                    return [2 /*return*/, ref.storage._makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getMetadata');\r\n                    return [4 /*yield*/, ref.storage._getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = getMetadata(ref.storage, ref._location, getMappings());\r\n                    return [2 /*return*/, ref.storage._makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('updateMetadata');\r\n                    return [4 /*yield*/, ref.storage._getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = updateMetadata(ref.storage, ref._location, metadata, getMappings());\r\n                    return [2 /*return*/, ref.storage._makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getDownloadURL');\r\n                    return [4 /*yield*/, ref.storage._getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n                    return [2 /*return*/, ref.storage\r\n                            ._makeRequest(requestInfo, authToken)\r\n                            .getPromise()\r\n                            .then(function (url) {\r\n                            if (url === null) {\r\n                                throw noDownloadURL();\r\n                            }\r\n                            return url;\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('deleteObject');\r\n                    return [4 /*yield*/, ref.storage._getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = deleteObject(ref.storage, ref._location);\r\n                    return [2 /*return*/, ref.storage._makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\r\nfunction _getChild(ref, childPath) {\r\n    var newPath = child(ref._location.path, childPath);\r\n    var location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof StorageService) {\r\n        var service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        var reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            if (path.includes('..')) {\r\n                throw invalidArgument('`path` param cannot contain \"..\"');\r\n            }\r\n            return _getChild(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof StorageService) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(config) {\r\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString);\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @public\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageService = /** @class */ (function () {\r\n    function StorageService(\r\n    /**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */\r\n    app, _authProvider, _pool, _url, _firebaseVersion) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._pool = _pool;\r\n        this._url = _url;\r\n        this._firebaseVersion = _firebaseVersion;\r\n        this._bucket = null;\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this.app.options);\r\n        }\r\n    }\r\n    Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\r\n        /**\r\n         * The maximum time to retry uploads in milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._maxUploadRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxUploadRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\r\n        /**\r\n         * The maximum time to retry operations other than uploads or downloads in\r\n         * milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._maxOperationRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxOperationRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StorageService.prototype._getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var auth, tokenData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        auth = this._authProvider.getImmediate({ optional: true });\r\n                        if (!auth) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, auth.getToken()];\r\n                    case 1:\r\n                        tokenData = _a.sent();\r\n                        if (tokenData !== null) {\r\n                            return [2 /*return*/, tokenData.accessToken];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    StorageService.prototype._delete = function () {\r\n        this._deleted = true;\r\n        this._requests.forEach(function (request) { return request.cancel(); });\r\n        this._requests.clear();\r\n        return Promise.resolve();\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    StorageService.prototype._makeStorageReference = function (loc) {\r\n        return new Reference(this, loc);\r\n    };\r\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    StorageService.prototype._makeRequest = function (requestInfo, authToken) {\r\n        var _this = this;\r\n        if (!this._deleted) {\r\n            var request_1 = makeRequest(requestInfo, this._appId, authToken, this._pool, this._firebaseVersion);\r\n            this._requests.add(request_1);\r\n            // Request removes itself from set when complete.\r\n            request_1.getPromise().then(function () { return _this._requests.delete(request_1); }, function () { return _this._requests.delete(request_1); });\r\n            return request_1;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    return StorageService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable$1(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytesResumable(ref, data, metadata);\r\n}\r\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$2(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getMetadata$1(ref);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves with the new metadata for this object.\r\n */\r\nfunction updateMetadata$2(ref, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return updateMetadata$1(ref, metadata);\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$2(ref, options) {\r\n    ref = getModularInstance(ref);\r\n    return list$1(ref, options);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll$1(ref) {\r\n    ref = getModularInstance(ref);\r\n    return listAll(ref);\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL$1(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getDownloadURL(ref);\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$2(ref) {\r\n    ref = getModularInstance(ref);\r\n    return deleteObject$1(ref);\r\n}\r\nfunction ref$1(serviceOrRef, pathOrUrl) {\r\n    serviceOrRef = getModularInstance(serviceOrRef);\r\n    return ref(serviceOrRef, pathOrUrl);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction _getChild$1(ref, childPath) {\r\n    return _getChild(ref, childPath);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskSnapshotCompat = /** @class */ (function () {\r\n    function UploadTaskSnapshotCompat(_delegate, task, ref) {\r\n        this._delegate = _delegate;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\r\n        get: function () {\r\n            return this._delegate.bytesTransferred;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\r\n        get: function () {\r\n            return this._delegate.metadata;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\r\n        get: function () {\r\n            return this._delegate.state;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\r\n        get: function () {\r\n            return this._delegate.totalBytes;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshotCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskCompat = /** @class */ (function () {\r\n    function UploadTaskCompat(_delegate, _ref) {\r\n        this._delegate = _delegate;\r\n        this._ref = _ref;\r\n        this.cancel = this._delegate.cancel.bind(this._delegate);\r\n        this.catch = this._delegate.catch.bind(this._delegate);\r\n        this.pause = this._delegate.pause.bind(this._delegate);\r\n        this.resume = this._delegate.resume.bind(this._delegate);\r\n    }\r\n    Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\r\n        get: function () {\r\n            return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\r\n        var _this = this;\r\n        return this._delegate.then(function (snapshot) {\r\n            if (onFulfilled) {\r\n                return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\r\n            }\r\n        }, onRejected);\r\n    };\r\n    UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var wrappedNextOrObserver = undefined;\r\n        if (!!nextOrObserver) {\r\n            if (typeof nextOrObserver === 'function') {\r\n                wrappedNextOrObserver = function (taskSnapshot) {\r\n                    return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                };\r\n            }\r\n            else {\r\n                wrappedNextOrObserver = {\r\n                    next: !!nextOrObserver.next\r\n                        ? function (taskSnapshot) {\r\n                            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                        }\r\n                        : undefined,\r\n                    complete: nextOrObserver.complete || undefined,\r\n                    error: nextOrObserver.error || undefined\r\n                };\r\n            }\r\n        }\r\n        return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\r\n    };\r\n    return UploadTaskCompat;\r\n}());\n\nvar ListResultCompat = /** @class */ (function () {\r\n    function ListResultCompat(_delegate, _service) {\r\n        this._delegate = _delegate;\r\n        this._service = _service;\r\n    }\r\n    Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.prefixes.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"items\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.items.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\r\n        get: function () {\r\n            return this._delegate.nextPageToken || null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ListResultCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ReferenceCompat = /** @class */ (function () {\r\n    function ReferenceCompat(_delegate, storage) {\r\n        this._delegate = _delegate;\r\n        this.storage = storage;\r\n    }\r\n    Object.defineProperty(ReferenceCompat.prototype, \"name\", {\r\n        get: function () {\r\n            return this._delegate.name;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._delegate.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._delegate.fullPath;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ReferenceCompat.prototype.toString = function () {\r\n        return this._delegate.toString();\r\n    };\r\n    /**\r\n     * @returns A reference to the object obtained by\r\n     * appending childPath, removing any duplicate, beginning, or trailing\r\n     * slashes.\r\n     */\r\n    ReferenceCompat.prototype.child = function (childPath) {\r\n        var reference = _getChild$1(this._delegate, childPath);\r\n        return new ReferenceCompat(reference, this.storage);\r\n    };\r\n    Object.defineProperty(ReferenceCompat.prototype, \"root\", {\r\n        get: function () {\r\n            return new ReferenceCompat(this._delegate.root, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\r\n        /**\r\n         * @returns A reference to the parent of the\r\n         * current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var reference = this._delegate.parent;\r\n            if (reference == null) {\r\n                return null;\r\n            }\r\n            return new ReferenceCompat(reference, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data - The blob to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.put = function (data, metadata) {\r\n        this._throwIfRoot('put');\r\n        return new UploadTaskCompat(uploadBytesResumable$1(this._delegate, data, metadata), this);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value - The string to upload.\r\n     * @param format - The format of the string to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        this._throwIfRoot('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = __assign({}, metadata);\r\n        if (metadataClone['contentType'] == null && data.contentType != null) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTaskCompat(new UploadTask(this._delegate, new FbsBlob(data.data, true), metadataClone), this);\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @returns A Promise that resolves with all the items and prefixes under\r\n     *  the current storage reference. `prefixes` contains references to\r\n     *  sub-directories and `items` contains references to objects in this\r\n     *  folder. `nextPageToken` is never returned.\r\n     */\r\n    ReferenceCompat.prototype.listAll = function () {\r\n        var _this = this;\r\n        return listAll$1(this._delegate).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options - See ListOptions for details.\r\n     * @returns A Promise that resolves with the items and prefixes.\r\n     * `prefixes` contains references to sub-folders and `items`\r\n     * contains references to objects in this folder. `nextPageToken`\r\n     * can be used to get the rest of the results.\r\n     */\r\n    ReferenceCompat.prototype.list = function (options) {\r\n        var _this = this;\r\n        return list$2(this._delegate, options || undefined).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * A promise that resolves with the metadata for this object. If this\r\n     * object doesn't exist or metadata cannot be retreived, the promise is\r\n     * rejected.\r\n     */\r\n    ReferenceCompat.prototype.getMetadata = function () {\r\n        return getMetadata$2(this._delegate);\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata - The new metadata for the object.\r\n     * Only values that have been explicitly set will be changed. Explicitly\r\n     * setting a value to null will remove the metadata.\r\n     * @returns A promise that resolves\r\n     * with the new metadata for this object.\r\n     * @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    ReferenceCompat.prototype.updateMetadata = function (metadata) {\r\n        return updateMetadata$2(this._delegate, metadata);\r\n    };\r\n    /**\r\n     * @returns A promise that resolves with the download\r\n     * URL for this object.\r\n     */\r\n    ReferenceCompat.prototype.getDownloadURL = function () {\r\n        return getDownloadURL$1(this._delegate);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @returns A promise that resolves if the deletion succeeds.\r\n     */\r\n    ReferenceCompat.prototype.delete = function () {\r\n        this._throwIfRoot('delete');\r\n        return deleteObject$2(this._delegate);\r\n    };\r\n    ReferenceCompat.prototype._throwIfRoot = function (name) {\r\n        if (this._delegate._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return ReferenceCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageServiceCompat = /** @class */ (function () {\r\n    function StorageServiceCompat(app, _delegate) {\r\n        var _this = this;\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n        this.INTERNAL = {\r\n            /**\r\n             * Called when the associated app is deleted.\r\n             */\r\n            delete: function () {\r\n                return _this._delegate._delete();\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxOperationRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxUploadRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    StorageServiceCompat.prototype.ref = function (path) {\r\n        if (isUrl(path)) {\r\n            throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\r\n        }\r\n        return new ReferenceCompat(ref$1(this._delegate, path), this);\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    StorageServiceCompat.prototype.refFromURL = function (url) {\r\n        if (!isUrl(url)) {\r\n            throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\r\n        }\r\n        try {\r\n            Location.makeFromUrl(url);\r\n        }\r\n        catch (e) {\r\n            throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\r\n        }\r\n        return new ReferenceCompat(ref$1(this._delegate, url), this);\r\n    };\r\n    StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\r\n        this._delegate.maxUploadRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\r\n        this._delegate.maxOperationRetryTime = time;\r\n    };\r\n    return StorageServiceCompat;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.4.7\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, _a) {\r\n    var url = _a.instanceIdentifier;\r\n    // Dependencies\r\n    // TODO: This should eventually be 'app-compat'\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    // TODO: get StorageService instance from component framework instead\r\n    // of creating a new one.\r\n    var storageServiceCompat = new StorageServiceCompat(app, new StorageService(app, authProvider, new XhrIoPool(), url, firebase.SDK_VERSION));\r\n    return storageServiceCompat;\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: StorageService,\r\n        Reference: ReferenceCompat\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n//# sourceMappingURL=index.esm.js.map\n"],"names":["DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","FirebaseStorageError","_super","__extends","code","message","_this","prependCode","serverResponse","FirebaseError","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","noDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","value","b","i","c","valid","hi","lo","percentEncodedBytes_","decoded","hasMinus","hasUnder","invalidChar","hasPlus","hasSlash","bytes","array","DataURLParts","dataURL","matches","middle","endsWith","dataUrl","parts","s","end","longEnough","TaskEvent","TaskState","taskStateFromInternalTaskState","state","ErrorCode","NetworkXhrIo","resolve","method","body","headers","key","header","listener","XhrIoPool","Location","encode","bucketString","bucketLocation","location","bucketDomain","gsModify","loc","gsPath","gsRegex","gsIndices","httpModify","version","firebaseStorageHost","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","group","captures","bucketValue","pathValue","FailRequest","error","_appDelete","start","f","callback","timeout","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","_i","callWithDelay","millis","handler","success","__spreadArray","mustStop","waitMillis","stopped","stop","wasTimeout","id","isJustDef","p","isFunction","isNonArrayObject","isString","isNativeBlob","isNativeBlobDefined","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","makeQueryString","params","queryPart","nextPart","NetworkRequest","successCodes","additionalRetryCodes","errorCallback","progressCallback","pool","reject","self","doTheRequest","backoffCallback","RequestEndStatus","xhr","progressListener","progressEvent","loaded","total","hitServer","status","wasCanceled","successCode","backoffDone","requestWentThrough","result","e","err","appDelete","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","wasSuccessCode","addAuthHeader_","authToken","addVersionHeader_","firebaseVersion","addGmpidHeader_","appId","makeRequest","requestInfo","getBlobBuilder","getBlob","BlobBuilder","bb","sliceBlob","blob","FbsBlob","elideCopy","size","blobType","startByte","endByte","realBlob","sliced","slice","blobby","val","uint8Arrays","finalLength_1","merged_1","index_1","jsonObjectOrNull","obj","parent","index","newPath","child","childPath","canonicalChildPath","component","lastComponent","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","sizeMapping","addRef","service","generateRef","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","toResourceString","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromResponseString","RequestInfo","handlerCheck","cndn","metadataHandler","text","listHandler","downloadUrlHandler","sharedErrorHandler","errorHandler","newErr","objectErrorHandler","shared","getMetadata","list","delimiter","pageToken","maxResults","urlParams","getDownloadUrl","updateMetadata","deleteObject","_xhr","_text","determineContentType_","metadataForUpload_","metadataClone","multipartUpload","genBoundary","str","boundary","metadata_","metadataString","preBlobPart","postBlobPart","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","uploadCommand","uploadStatus","newCurrent","Observer","nextOrObserver","complete","asFunctions","observer","async","argsToForward","UploadTask","ref","sizeBefore","createRequest","statusRequest","uploadRequest","newStatus","currentSize","metadataRequest","multipartRequest","transferred","old","wasPaused","externalState","type","completed","onFulfilled","onRejected","observers","triggered","toCall","Reference","_service","uploadBytesResumable","listAll","accumulator","listAllHelper","__awaiter","opt","nextPage","__generator","list$1","options","op","getMetadata$1","updateMetadata$1","getDownloadURL","deleteObject$1","_getChild","isUrl","refFromURL","refFromPath","StorageService","serviceOrRef","pathOrUrl","extractBucket","config","app","_authProvider","_pool","_url","_firebaseVersion","time","auth","tokenData","request","request_1","uploadBytesResumable$1","getModularInstance","getMetadata$2","updateMetadata$2","list$2","listAll$1","getDownloadURL$1","deleteObject$2","ref$1","_getChild$1","UploadTaskSnapshotCompat","_delegate","task","UploadTaskCompat","_ref","snapshot","wrappedNextOrObserver","taskSnapshot","ListResultCompat","ReferenceCompat","storage","__assign","r","StorageServiceCompat","STORAGE_TYPE","factory","container","authProvider","storageServiceCompat","firebase","registerStorage","instance","namespaceExports","Component"],"mappings":"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","x_google_ignoreList":[0]}